// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=address[8], out=not1);
    Not(in=address[7], out=not2);
    Not(in=address[6], out=not3);
    
    And3way(a=not1, b=not2, c=not3, out=firstRAM);
    And3way(a=not1, b=not2, c=address[6], out=secondRAM);
    And3way(a=not1, b=address[7], c=not3, out=thirdRAM);
    And3way(a=not1, b=address[7], c=address[6], out=fourthRAM);
    And3way(a=address[8], b=not2, c=not3, out=fifthRAM);
    And3way(a=address[8], b=not2, c=address[6], out=sixthRAM);
    And3way(a=address[8], b=address[7], c=not3, out=seventhRAM);
    And3way(a=address[8], b=address[7], c=address[6], out=eigthRAM);

    And(a=load, b=firstRAM, out=loadFirstRAM);
    And(a=load, b=secondRAM, out=loadSecondRAM);
    And(a=load, b=thirdRAM, out=loadThirdRAM);
    And(a=load, b=fourthRAM, out=loadFourthRAM);
    And(a=load, b=fifthRAM, out=loadFifthRAM);
    And(a=load, b=sixthRAM, out=loadSixthRAM);
    And(a=load, b=seventhRAM, out=loadSeventhRAM);
    And(a=load, b=eigthRAM, out=loadEigthRAM);

    RAM64(in=in, load=loadFirstRAM, address=address[0..5], out=out1);
    RAM64(in=in, load=loadSecondRAM, address=address[0..5], out=out2);
    RAM64(in=in, load=loadThirdRAM, address=address[0..5], out=out3);
    RAM64(in=in, load=loadFourthRAM, address=address[0..5], out=out4);
    RAM64(in=in, load=loadFifthRAM, address=address[0..5], out=out5);
    RAM64(in=in, load=loadSixthRAM, address=address[0..5], out=out6);
    RAM64(in=in, load=loadSeventhRAM, address=address[0..5], out=out7);
    RAM64(in=in, load=loadEigthRAM, address=address[0..5], out=out8);

    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[6..8], out=out);

}